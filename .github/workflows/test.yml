name: Test

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name : Test
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v3
    
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.*
    
    - name: Test
      id: test
      working-directory : src/Pipeline.Tests
      run: dotnet test /p:Threshold=50 /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput='./TestResults/'

    - uses: actions/upload-artifact@v3
      with:
        name: test-result
        path: src/Pipeline.Tests/TestResults/coverage.cobertura.xml

  build-report:
    name : Coverage Report
    needs: [test]
    if: ${{ needs.test.result == 'success' }}
    runs-on: ubuntu-latest
    steps:

      - name: Download Test Result
        uses: actions/download-artifact@v3
        with:
          name: test-result

      - name: Install Tools
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
      
      - name: Generate Report
        working-directory : src/Pipeline.Tests
        run: reportgenerator "-reports:coverage.cobertura.xml" "-targetdir:./CoverageReport" "-reporttypes:HTML;Badges"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: src/Pipeline.Tests/CoverageReport
    
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
